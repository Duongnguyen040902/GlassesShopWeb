@model IEnumerable<Group4_GlassesShop.Models.DataModel.Product>

@{
    ViewData["Title"] = "ListStock";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    Group4_GlassesShop.Models.DataModel.GlassesShopContext context = new Group4_GlassesShop.Models.DataModel.GlassesShopContext();
}
<style>
    .cell {
        max-width: 200px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .th {
        background-color: black;
        color: white;
    }


    table {
        width: 100%;
        border-collapse: collapse;
    }

        table th,
        table td {
            padding: 10px;
            text-align: left;
            border: 1px solid #ccc;
        }

        table th {
            background-color: #f2f2f2;
        }

        table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        table tr:hover {
            background-color: #e6e6e6;
        }

</style>
<h1>ListProductStock</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Pid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProducctName)
            </th>
            <th>
                Quantity
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Brand)
            </th>            
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Feature)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Shape)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Pid)
                </td>
                <td style="display:flex; align-items:center; padding-right:0px;">
                    @{
                        var image = item.Images.SingleOrDefault(i => i.Pid == item.Pid && i.ImageUrl.Contains("chinh"));
                    }

                    @if (image != null)
                    {
                        <img style="width:20%; margin-right:5px" src="@image.ImageUrl" alt="Product Image" />
                    }

                    @Html.DisplayFor(modelItem => item.ProducctName)
                    
                </td>
                <td>
                    @{
                        var GetQuantityTotal = context.Stocks.Where(s => s.ProductId == item.Pid).Sum(s => s.Quantity);
                    }
                    @GetQuantityTotal
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand.Bname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Cname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Feature.FeatureName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Shape.ShapeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type.TypeName)
                </td>
                <td>
                    @Html.ActionLink("Add stock", "AddStock", new {  id=item.Pid})                
                </td>
            </tr>
        }
    </tbody>
</table>
